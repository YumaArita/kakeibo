name: Build and Deploy React Native App

on:
  push:
    branches:
      - main

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - run: npm install --prefix ExpenseTracker --legacy-peer-deps
      - run: npx expo install expo-modules-core expo-dev-client --prefix ExpenseTracker
      - run: ./gradlew assembleRelease
        working-directory: ExpenseTracker/android

  build-ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "18"
      - run: echo "SANITY_PROJECT_ID=${{ secrets.SANITY_PROJECT_ID }}" >> $GITHUB_ENV
        run: echo "SANITY_DATASET=${{ secrets.SANITY_DATASET }}" >> $GITHUB_ENV
        run: echo "SANITY_TOKEN=${{ secrets.SANITY_TOKEN }}" >> $GITHUB_ENV
      - run: npm install --prefix ExpenseTracker --legacy-peer-deps
      - run: npx expo install expo-modules-core expo-dev-client --prefix ExpenseTracker
      - run: npx expo prebuild --no-install --clean --non-interactive --platform ios --prefix ExpenseTracker
      - run: |
          pod install --project-directory=ExpenseTracker/ios
        if: hashFiles('**/Podfile.lock') == ''
      - run: security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
        env:
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      - run: |
          security import Certificate.p12 -k build.keychain -P "$CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          echo "$PROVISIONING_PROFILE_BASE64" | base64 --decode > Profile.mobileprovision
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp Profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
        env:
          CERTIFICATE_BASE64: ${{ secrets.CERTIFICATE_BASE64 }}
          CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
          PROVISIONING_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}
      - run: xcodebuild -workspace ExpenseTracker/ios/ExpenseTracker.xcworkspace -scheme ExpenseTracker -sdk iphoneos -configuration Release archive -archivePath $GITHUB_WORKSPACE/build/ExpenseTracker.xcarchive CODE_SIGN_STYLE=Manual CODE_SIGN_IDENTITY="iPhone Distribution" PROVISIONING_PROFILE_SPECIFIER="ExpenseTracker Distribution" DEVELOPMENT_TEAM=${{ secrets.APPLE_TEAM_ID }} -allowProvisioningUpdates
        env:
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      - run: xcodebuild -exportArchive -archivePath $GITHUB_WORKSPACE/build/ExpenseTracker.xcarchive -exportOptionsPlist $GITHUB_WORKSPACE/build/exportOptions.plist -exportPath $GITHUB_WORKSPACE/build
      - run: xcrun altool --upload-app -f $GITHUB_WORKSPACE/build/*.ipa -t ios -u ${{ secrets.APPLE_ID }} -p ${{ secrets.APPLE_PASSWORD }} --verbose
